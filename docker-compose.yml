# ================================================================
# Docker Compose para o projeto CEASA Digital
# Como rodar: docker-compose up --build
# ================================================================

services:
  # ====================== Banco de Dados ======================
  database-ceasa-digital:
    image: postgres:16-alpine
    container_name: database-ceasa-digital
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${DATASOURCE_PASSWORD}
      POSTGRES_DB: ${DATASOURCE_DB}
    ports:
      - "${DATASOURCE_EXTERNAL_PORT}:${DATASOURCE_INTERNAL_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ceasa-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATASOURCE_USERNAME} -d ${DATASOURCE_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  # ====================== Backend API ======================
  backend:
    container_name: ceasa-backend-container
    build: 
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      # Spring Profile
      - SPRING_PROFILES_ACTIVE=dev
      
      # Server Configuration
      - SERVER_PORT=${SERVER_INTERNAL_PORT}
      
      # Database Configuration
      - DATASOURCE_URL=jdbc:postgresql://database-ceasa-digital:${DATASOURCE_INTERNAL_PORT}/${DATASOURCE_DB}
      - DATASOURCE_USERNAME=${DATASOURCE_USERNAME}
      - DATASOURCE_PASSWORD=${DATASOURCE_PASSWORD}
      - DATASOURCE_DB=${DATASOURCE_DB}
      
      # OAuth2 Configuration
      - OAUTH2_CLIENT_ID=${OAUTH2_CLIENT_ID}
      - OAUTH2_CLIENT_SECRET=${OAUTH2_CLIENT_SECRET}
      - OAUTH2_JWT_DURATION=${OAUTH2_JWT_DURATION}
      - OAUTH2_REFRESH_DURATION=${OAUTH2_REFRESH_DURATION}
      - OAUTH2_CORS_ORIGINS=${OAUTH2_CORS_ORIGINS}
      - OAUTH2_JWK_SET_URI=${OAUTH2_JWK_SET_URI}
      - OAUTH2_ISSUER_URI=${OAUTH2_ISSUER_URI}
    ports:
      - "${SERVER_EXTERNAL_PORT}:${SERVER_INTERNAL_PORT}"
    depends_on:
      database-ceasa-digital:
        condition: service_healthy
    networks:
      - ceasa-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${SERVER_INTERNAL_PORT}/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # ====================== Frontend ======================
  frontend:
    container_name: ceasa-frontend-container
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - ceasa-network
    environment:
      - REACT_APP_API_URL=http://localhost:${SERVER_EXTERNAL_PORT}

# ================================================================
# Volumes e Networks
# ================================================================
volumes:
  postgres_data:
    driver: local

networks:
  ceasa-network:
    driver: bridge