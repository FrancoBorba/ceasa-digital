version: '3.8'

services:
  database-ceasa-digital:
    image: postgres:15-alpine
    container_name: ceasa-digital-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DOCKER_POSTGRES_DB}
      POSTGRES_USER: ${DOCKER_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DOCKER_POSTGRES_PASSWORD}
    ports:
      - "${DOCKER_POSTGRES_EXTERNAL_PORT}:${DOCKER_POSTGRES_INTERNAL_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ceasa-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DOCKER_POSTGRES_USER} -d ${DOCKER_POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend-ceasa-digital:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ceasa-digital-backend
    restart: unless-stopped
    environment:
      # Spring Profile
      SPRING_PROFILES_ACTIVE: ${DOCKER_SPRING_PROFILES_ACTIVE}
      
      # Database Configuration
      DEV_DATASOURCE_URL: ${DOCKER_POSTGRES_URL}
      DEV_DATASOURCE_USERNAME: ${DOCKER_POSTGRES_USER}
      DEV_DATASOURCE_PASSWORD: ${DOCKER_POSTGRES_PASSWORD}
      
      # Server Configuration
      SERVER_PORT: ${DOCKER_SERVER_INTERNAL_PORT}
      
      # Flyway Configuration
      SPRING_FLYWAY_ENABLED: true
      SPRING_FLYWAY_BASELINE_ON_MIGRATE: true
      SPRING_FLYWAY_LOCATIONS: classpath:db/migration
    ports:
      - "${DOCKER_SERVER_EXTERNAL_PORT}:${DOCKER_SERVER_INTERNAL_PORT}"
    depends_on:
      database-ceasa-digital:
        condition: service_healthy
    networks:
      - ceasa-network
    volumes:
      # Para logs (opcional)
      - ./logs:/app/logs

volumes:
  postgres_data:
    driver: local

networks:
  ceasa-network:
    driver: bridge
